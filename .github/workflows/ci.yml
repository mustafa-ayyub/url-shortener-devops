name: CI / CD Pipeline

on:
  push:
    branches:
      - "**"

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ github.sha }} 
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm run test

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # Tag the image with the unique commit SHA
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }}

  deploy-to-aws:
    name: Deploy to AWS (master branch)
    runs-on: ubuntu-latest
    needs: build-and-test
    
    if: github.ref == 'refs/heads/master'
    
    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsDeployRole
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          terraform init -input=false \
            -backend-config="bucket=${{ secrets.TERRAFORM_STATE_BUCKET }}" \
            -backend-config="key=url-shortener/terraform.tfstate" \
            -backend-config="region=${{ secrets.AWS_REGION }}"
        working-directory: ./terraform/aws 

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="docker_image_tag=${{ needs.build-and-test.outputs.image_tag }}" \
            -var="github_repo=${{ github.repository }}"
        working-directory: ./terraform/aws